-- Generated by tools/imgui_upgrader/build_enums.lua

local ImGuiInputTextFlags_None                = 0
local ImGuiInputTextFlags_CharsDecimal        = 1       -- 1 << 0
local ImGuiInputTextFlags_CharsHexadecimal    = 2       -- 1 << 1
local ImGuiInputTextFlags_CharsUppercase      = 4       -- 1 << 2
local ImGuiInputTextFlags_CharsNoBlank        = 8       -- 1 << 3
local ImGuiInputTextFlags_AutoSelectAll       = 16      -- 1 << 4
local ImGuiInputTextFlags_EnterReturnsTrue    = 32      -- 1 << 5
local ImGuiInputTextFlags_CallbackCompletion  = 64      -- 1 << 6
local ImGuiInputTextFlags_CallbackHistory     = 128     -- 1 << 7
local ImGuiInputTextFlags_CallbackAlways      = 256     -- 1 << 8
local ImGuiInputTextFlags_CallbackCharFilter  = 512     -- 1 << 9
local ImGuiInputTextFlags_AllowTabInput       = 1024    -- 1 << 10
local ImGuiInputTextFlags_CtrlEnterForNewLine = 2048    -- 1 << 11
local ImGuiInputTextFlags_NoHorizontalScroll  = 4096    -- 1 << 12
local ImGuiInputTextFlags_AlwaysOverwrite     = 8192    -- 1 << 13
local ImGuiInputTextFlags_ReadOnly            = 16384   -- 1 << 14
local ImGuiInputTextFlags_Password            = 32768   -- 1 << 15
local ImGuiInputTextFlags_NoUndoRedo          = 65536   -- 1 << 16
local ImGuiInputTextFlags_CharsScientific     = 131072  -- 1 << 17
local ImGuiInputTextFlags_CallbackResize      = 262144  -- 1 << 18
local ImGuiInputTextFlags_CallbackEdit        = 524288  -- 1 << 19
local ImGuiInputTextFlags_EscapeClearsAll     = 1048576 -- 1 << 20

imgui.InputTextFlags = {
	None                = ImGuiInputTextFlags_None,
	CharsDecimal        = ImGuiInputTextFlags_CharsDecimal,        -- Allow 0123456789.+-*/
	CharsHexadecimal    = ImGuiInputTextFlags_CharsHexadecimal,    -- Allow 0123456789ABCDEFabcdef
	CharsUppercase      = ImGuiInputTextFlags_CharsUppercase,      -- Turn a..z into A..Z
	CharsNoBlank        = ImGuiInputTextFlags_CharsNoBlank,        -- Filter out spaces, tabs
	AutoSelectAll       = ImGuiInputTextFlags_AutoSelectAll,       -- Select entire text when first taking mouse focus
	EnterReturnsTrue    = ImGuiInputTextFlags_EnterReturnsTrue,    -- Return 'true' when Enter is pressed (as opposed to every time the value was modified). Consider looking at the IsItemDeactivatedAfterEdit() function.
	CallbackCompletion  = ImGuiInputTextFlags_CallbackCompletion,  -- Callback on pressing TAB (for completion handling)
	CallbackHistory     = ImGuiInputTextFlags_CallbackHistory,     -- Callback on pressing Up/Down arrows (for history handling)
	CallbackAlways      = ImGuiInputTextFlags_CallbackAlways,      -- Callback on each iteration. User code may query cursor position, modify text buffer.
	CallbackCharFilter  = ImGuiInputTextFlags_CallbackCharFilter,  -- Callback on character inputs to replace or discard them. Modify 'EventChar' to replace or discard, or return 1 in callback to discard.
	AllowTabInput       = ImGuiInputTextFlags_AllowTabInput,       -- Pressing TAB input a '\t' character into the text field
	CtrlEnterForNewLine = ImGuiInputTextFlags_CtrlEnterForNewLine, -- In multi-line mode, unfocus with Enter, add new line with Ctrl+Enter (default is opposite: unfocus with Ctrl+Enter, add line with Enter).
	NoHorizontalScroll  = ImGuiInputTextFlags_NoHorizontalScroll,  -- Disable following the cursor horizontally
	AlwaysOverwrite     = ImGuiInputTextFlags_AlwaysOverwrite,     -- Overwrite mode
	ReadOnly            = ImGuiInputTextFlags_ReadOnly,            -- Read-only mode
	Password            = ImGuiInputTextFlags_Password,            -- Password mode, display all characters as '*'
	NoUndoRedo          = ImGuiInputTextFlags_NoUndoRedo,          -- Disable undo/redo. Note that input text owns the text data while active, if you want to provide your own undo/redo stack you need e.g. to call ClearActiveID().
	CharsScientific     = ImGuiInputTextFlags_CharsScientific,     -- Allow 0123456789.+-*/eE (Scientific notation input)
	CallbackResize      = ImGuiInputTextFlags_CallbackResize,      -- Callback on buffer capacity changes request (beyond 'buf_size' parameter value), allowing the string to grow. Notify when the string wants to be resized (for string types which hold a cache of their Size). You will be provided a new BufSize in the callback and NEED to honor it. (see misc/cpp/imgui_stdlib.h for an example of using this)
	CallbackEdit        = ImGuiInputTextFlags_CallbackEdit,        -- Callback on any edit (note that InputText() already returns true on edit, the callback is useful mainly to manipulate the underlying buffer while focus is active)
	EscapeClearsAll     = ImGuiInputTextFlags_EscapeClearsAll,     -- Escape key clears content if not empty, and deactivate otherwise (contrast to default behavior of Escape to revert)
}
